name: Lint, Test, and Auto-Fix

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  lint-test-fix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref }}

      # ---------- PHP SETUP ----------
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: phpcs

      - uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            vendor
            root/vendor
          key: composer-${{ hashFiles('**/composer.lock') }}

      - run: composer install --no-progress --prefer-dist --no-interaction
      - run: composer install --working-dir=root --no-progress --prefer-dist --no-interaction --no-dev

      - name: Setup Demo DB
        run: bash root/install/setup_demo_db.sh

      - name: Run PHPUnit Tests
        run: |
          mkdir -p build/test-results
          php vendor/bin/phpunit \
            --configuration phpunit.xml.dist \
            --log-junit build/test-results/junit.xml

      - name: Upload PHPUnit Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-results
          path: build/test-results/junit.xml

      - name: PHPCBF
        run: |
          TARGETS=""
          [ -d root/app ] && TARGETS="${TARGETS} root/app"
          if [ -n "$TARGETS" ]; then
            php vendor/bin/phpcbf --standard=phpcs.xml $TARGETS || true
          else
            echo "No PHP dirs found. Skipping PHPCBF."
          fi

      # ---------- NODE / JS & CSS LINTING ----------
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}

      - run: npm ci

      - name: ESLint Fix
        run: |
          if find root/public/assets/js -type f -name "*.js" ! -path "*/vendor/*" | grep -q .; then
            npx eslint "root/public/assets/js/**/*.js" \
              --ignore-pattern "root/vendor/**" \
              --fix || true
          else
            echo "No JS files. Skipping ESLint."
          fi

      - name: Stylelint Fix
        run: |
          if find root/public/assets/css -type f -name "*.css" ! -path "*/vendor/*" | grep -q .; then
            npx stylelint "root/public/assets/css/**/*.css" \
              --ignore-pattern "root/vendor/**" \
              --allow-empty-input \
              --fix || true
          else
            echo "No CSS files. Skipping Stylelint."
          fi

      # ---------- COMMIT FIXES ----------
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit fixes
        run: |
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore: auto-lint/style fixes"
          git push origin HEAD:${{ github.head_ref }}
